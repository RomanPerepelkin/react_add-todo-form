{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/getUsers.ts","components/Form/Form.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","Form","setNewPosts","useState","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","newPost","setNewPost","action","method","onSubmit","event","preventDefault","trim","type","placeholder","value","onChange","target","prevPost","replace","todoItems","Math","max","App","currentTodos","setCurrentTodos","handleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2da21ef.chunk.js","sourcesContent":["import { User } from '../../types/user';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', {\n      'TodoInfo--completed': todo.completed === true,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n    <UserInfo user={todo.user || null} />\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId:number) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n","import { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/todo';\nimport { getUserById } from '../../services/getUsers';\n\ntype Props = {\n  setNewPosts: (todo: Todo) => void;\n  todos: Todo[],\n};\n\nfunction getNewId(todoItems: Todo[]) {\n  const newId = Math.max(...todoItems.map(todo => todo.id));\n\n  return newId + 1;\n}\n\nexport const Form: React.FC<Props> = ({ setNewPosts, todos }) => {\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n  const [newPost, setNewPost] = useState({\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n    user: getUserById(0),\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setNewPost((prevPost: Todo) => ({\n      ...prevPost, [name]: value.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, ''),\n    }));\n\n    setHasTitleError(false);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { name, value } = event.target;\n\n    setNewPost((prevPost: Todo) => ({\n      ...prevPost,\n      id: getNewId(todos),\n      [name]: +value,\n      user: getUserById(+value),\n    }));\n\n    setHasUserIdError(false);\n  };\n\n  const clear = () => (\n    setNewPost({\n      id: 0,\n      title: '',\n      completed: false,\n      userId: 0,\n      user: getUserById(0),\n    })\n  );\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!newPost.title.trim()) {\n      setHasTitleError(true);\n    }\n\n    if (newPost.userId === 0) {\n      setHasUserIdError(true);\n    }\n\n    if (!newPost.title || newPost.userId === 0) {\n      return;\n    }\n\n    setNewPosts(newPost);\n    clear();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Enter a title\"\n          data-cy=\"titleInput\"\n          value={newPost.title}\n          onChange={handleChange}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n\n      </div>\n\n      <div className=\"field\">\n        <select\n          name=\"userId\"\n          data-cy=\"userSelect\"\n          value={newPost.userId}\n          onChange={handleSelect}\n        >\n          <option value=\"0\">Choose a user</option>\n          {usersFromServer.map(user => (\n            <option value={user.id} key={user.id}>{user.name}</option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/todo';\nimport { TodoList } from './components/TodoList';\nimport { Form } from './components/Form';\nimport { getUserById } from './services/getUsers';\n\nexport const todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [currentTodos, setCurrentTodos] = useState(todos);\n\n  const setTodos = (newPost: Todo) => {\n    setCurrentTodos(handleTodos => [\n      ...handleTodos,\n      newPost,\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <Form setNewPosts={setTodos} todos={currentTodos} />\n\n      <div className=\"App\">\n        <h1 className=\"App__title\">Static list of todos</h1>\n        <TodoList todos={currentTodos} />\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}